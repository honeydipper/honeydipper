---
defaults: &defaults
  docker:
    - image: golang:1.11.1-alpine3.8
  working_directory: /go/src/github.com/honeydipper/honeydipper

restore_deps: &restore_deps
  restore_cache:
    key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
    paths:
      - /go/src/github.com/honeydipper/honeydipper/vendor

version: 2
jobs:
  lint:
    <<: *defaults
    steps:
      - run: apk add git openssh-client
      - checkout
      - run: go get -u golang.org/x/lint/golint
      - run: go fmt
      - run: golint
  test:
    <<: *defaults
    steps:
      - run: apk add git openssh-client gcc libc-dev
      - run:
          name: adding-golangci-lint
          command: wget -O - -q https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.15.0
      - checkout
      - *restore_deps
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep ensure
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - /go/src/github.com/honeydipper/honeydipper/vendor
      - run: golangci-lint run
      - run: go test -v ./...
  integration:
    <<: *defaults
    docker:
      - image: golang:1.11.1-alpine3.8
      - image: redis:4.0-alpine
    steps:
      - run:
          name: install dependencies
          command: >
            apk add --repository http://dl-3.alpinelinux.org/alpine/edge/testing
            git openssh-client gcc libc-dev dockerize
      - checkout
      - *restore_deps
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: dep ensure
      - run: go install ./...
      - run:
          name: Wait for Redis
          command: dockerize -wait tcp://127.0.0.1:6379 -timeout 120s
      - run: go test -tags=integration -v ./...
  build:
    docker:
      - image: google/cloud-sdk
    environment:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    working_directory: /go/src/github.com/honeydipper/honeydipper
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: dockerbuildpush
          command: |
            export VERSION=$(git describe --match '[0-9]*' --tags $(git log -n1 --pretty='%h'))
            export TAG=honeydipper/honeydipper:$VERSION
            cp build/docker/Dockerfile .
            docker build -t $TAG .
            docker push $TAG
  buildcharts:
    docker:
      - image: alpine/helm
    working_directory: /go/src/github.com/honeydipper/honeydipper
    steps:
      - run:
          name: addingosdeps
          command: apk add git openssh-client curl
      - checkout
      - run:
          name: buildpushcharts
          command: |
            export VERSION=$(git describe --match 'chart-*' --tags $(git log -n1 --pretty='%h') | sed 's/^chart-//g')
            cd deployments/helm
            sed -i.bak 's/^version: .*$/version: '${VERSION}'/g' honeydipper/Chart.yaml
            helm init --client-only
            helm package honeydipper
            helm plugin install https://github.com/nouney/helm-gcs

workflows:
  version: 2
  run_tests:
    jobs:
      - lint:
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
      - test:
          requires:
            - lint
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
      - integration:
          requires:
            - test
          filters:
            tags:
              ignore: /.+/
            branches:
              only: /.*/
  build:
    jobs:
      - lint:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - test:
          requires:
            - lint
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - integration:
          requires:
            - test
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
      - build:
          requires:
            - integration
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/

  buildcharts:
    jobs:
      - buildcharts:
          filters:
            tags:
              only: /^chart-[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/
