// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	storage "cloud.google.com/go/storage"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockBucketIterator is a mock of BucketIterator interface
type MockBucketIterator struct {
	ctrl     *gomock.Controller
	recorder *MockBucketIteratorMockRecorder
}

// MockBucketIteratorMockRecorder is the mock recorder for MockBucketIterator
type MockBucketIteratorMockRecorder struct {
	mock *MockBucketIterator
}

// NewMockBucketIterator creates a new mock instance
func NewMockBucketIterator(ctrl *gomock.Controller) *MockBucketIterator {
	mock := &MockBucketIterator{ctrl: ctrl}
	mock.recorder = &MockBucketIteratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBucketIterator) EXPECT() *MockBucketIteratorMockRecorder {
	return m.recorder
}

// Next mocks base method
func (m *MockBucketIterator) Next() (*storage.BucketAttrs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(*storage.BucketAttrs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Next indicates an expected call of Next
func (mr *MockBucketIteratorMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockBucketIterator)(nil).Next))
}

// MockObjectIterator is a mock of ObjectIterator interface
type MockObjectIterator struct {
	ctrl     *gomock.Controller
	recorder *MockObjectIteratorMockRecorder
}

// MockObjectIteratorMockRecorder is the mock recorder for MockObjectIterator
type MockObjectIteratorMockRecorder struct {
	mock *MockObjectIterator
}

// NewMockObjectIterator creates a new mock instance
func NewMockObjectIterator(ctrl *gomock.Controller) *MockObjectIterator {
	mock := &MockObjectIterator{ctrl: ctrl}
	mock.recorder = &MockObjectIteratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockObjectIterator) EXPECT() *MockObjectIteratorMockRecorder {
	return m.recorder
}

// Next mocks base method
func (m *MockObjectIterator) Next() (*storage.ObjectAttrs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Next")
	ret0, _ := ret[0].(*storage.ObjectAttrs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Next indicates an expected call of Next
func (mr *MockObjectIteratorMockRecorder) Next() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Next", reflect.TypeOf((*MockObjectIterator)(nil).Next))
}
