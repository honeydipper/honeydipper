// Copyright 2022 PayPal Inc.
//
// This Source Code Form is subject to the terms of the MIT License.
// If a copy of the MIT License was not distributed with this file,
// you can obtain one at https://mit-license.org/.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: drivers/cmd/hd-driver-embeddings/main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	genai "google.golang.org/genai"
)

// MockGenAIClientModels is a mock of GenAIClientModels interface.
type MockGenAIClientModels struct {
	ctrl     *gomock.Controller
	recorder *MockGenAIClientModelsMockRecorder
}

// MockGenAIClientModelsMockRecorder is the mock recorder for MockGenAIClientModels.
type MockGenAIClientModelsMockRecorder struct {
	mock *MockGenAIClientModels
}

// NewMockGenAIClientModels creates a new mock instance.
func NewMockGenAIClientModels(ctrl *gomock.Controller) *MockGenAIClientModels {
	mock := &MockGenAIClientModels{ctrl: ctrl}
	mock.recorder = &MockGenAIClientModelsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGenAIClientModels) EXPECT() *MockGenAIClientModelsMockRecorder {
	return m.recorder
}

// EmbedContent mocks base method.
func (m *MockGenAIClientModels) EmbedContent(ctx context.Context, model string, contents []*genai.Content, config *genai.EmbedContentConfig) (*genai.EmbedContentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EmbedContent", ctx, model, contents, config)
	ret0, _ := ret[0].(*genai.EmbedContentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EmbedContent indicates an expected call of EmbedContent.
func (mr *MockGenAIClientModelsMockRecorder) EmbedContent(ctx, model, contents, config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EmbedContent", reflect.TypeOf((*MockGenAIClientModels)(nil).EmbedContent), ctx, model, contents, config)
}
