// Copyright 2019 Honey Science Corporation
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, you can obtain one at http://mozilla.org/MPL/2.0/.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: internal/workflow/store.go

// Package mock_workflow is a generated GoMock package.
package mock_workflow

import (
	gomock "github.com/golang/mock/gomock"
	config "github.com/honeydipper/honeydipper/internal/config"
	dipper "github.com/honeydipper/honeydipper/pkg/dipper"
	reflect "reflect"
)

// MockSessionStoreHelper is a mock of SessionStoreHelper interface
type MockSessionStoreHelper struct {
	ctrl     *gomock.Controller
	recorder *MockSessionStoreHelperMockRecorder
}

// MockSessionStoreHelperMockRecorder is the mock recorder for MockSessionStoreHelper
type MockSessionStoreHelperMockRecorder struct {
	mock *MockSessionStoreHelper
}

// NewMockSessionStoreHelper creates a new mock instance
func NewMockSessionStoreHelper(ctrl *gomock.Controller) *MockSessionStoreHelper {
	mock := &MockSessionStoreHelper{ctrl: ctrl}
	mock.recorder = &MockSessionStoreHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSessionStoreHelper) EXPECT() *MockSessionStoreHelperMockRecorder {
	return m.recorder
}

// GetConfig mocks base method
func (m *MockSessionStoreHelper) GetConfig() *config.Config {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig")
	ret0, _ := ret[0].(*config.Config)
	return ret0
}

// GetConfig indicates an expected call of GetConfig
func (mr *MockSessionStoreHelperMockRecorder) GetConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockSessionStoreHelper)(nil).GetConfig))
}

// SendMessage mocks base method
func (m *MockSessionStoreHelper) SendMessage(msg *dipper.Message) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendMessage", msg)
}

// SendMessage indicates an expected call of SendMessage
func (mr *MockSessionStoreHelperMockRecorder) SendMessage(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*MockSessionStoreHelper)(nil).SendMessage), msg)
}
